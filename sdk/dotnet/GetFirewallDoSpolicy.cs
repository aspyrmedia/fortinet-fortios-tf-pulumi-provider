// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Aspyrmedia.Fortios
{
    public static class GetFirewallDoSpolicy
    {
        public static Task<GetFirewallDoSpolicyResult> InvokeAsync(GetFirewallDoSpolicyArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetFirewallDoSpolicyResult>("fortios:index/getFirewallDoSpolicy:getFirewallDoSpolicy", args ?? new GetFirewallDoSpolicyArgs(), options.WithDefaults());

        public static Output<GetFirewallDoSpolicyResult> Invoke(GetFirewallDoSpolicyInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetFirewallDoSpolicyResult>("fortios:index/getFirewallDoSpolicy:getFirewallDoSpolicy", args ?? new GetFirewallDoSpolicyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetFirewallDoSpolicyArgs : global::Pulumi.InvokeArgs
    {
        [Input("policyid", required: true)]
        public int Policyid { get; set; }

        [Input("vdomparam")]
        public string? Vdomparam { get; set; }

        public GetFirewallDoSpolicyArgs()
        {
        }
        public static new GetFirewallDoSpolicyArgs Empty => new GetFirewallDoSpolicyArgs();
    }

    public sealed class GetFirewallDoSpolicyInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("policyid", required: true)]
        public Input<int> Policyid { get; set; } = null!;

        [Input("vdomparam")]
        public Input<string>? Vdomparam { get; set; }

        public GetFirewallDoSpolicyInvokeArgs()
        {
        }
        public static new GetFirewallDoSpolicyInvokeArgs Empty => new GetFirewallDoSpolicyInvokeArgs();
    }


    [OutputType]
    public sealed class GetFirewallDoSpolicyResult
    {
        public readonly ImmutableArray<Outputs.GetFirewallDoSpolicyAnomalyResult> Anomalies;
        public readonly string Comments;
        public readonly ImmutableArray<Outputs.GetFirewallDoSpolicyDstaddrResult> Dstaddrs;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Interface;
        public readonly string Name;
        public readonly int Policyid;
        public readonly ImmutableArray<Outputs.GetFirewallDoSpolicyServiceResult> Services;
        public readonly ImmutableArray<Outputs.GetFirewallDoSpolicySrcaddrResult> Srcaddrs;
        public readonly string Status;
        public readonly string? Vdomparam;

        [OutputConstructor]
        private GetFirewallDoSpolicyResult(
            ImmutableArray<Outputs.GetFirewallDoSpolicyAnomalyResult> anomalies,

            string comments,

            ImmutableArray<Outputs.GetFirewallDoSpolicyDstaddrResult> dstaddrs,

            string id,

            string @interface,

            string name,

            int policyid,

            ImmutableArray<Outputs.GetFirewallDoSpolicyServiceResult> services,

            ImmutableArray<Outputs.GetFirewallDoSpolicySrcaddrResult> srcaddrs,

            string status,

            string? vdomparam)
        {
            Anomalies = anomalies;
            Comments = comments;
            Dstaddrs = dstaddrs;
            Id = id;
            Interface = @interface;
            Name = name;
            Policyid = policyid;
            Services = services;
            Srcaddrs = srcaddrs;
            Status = status;
            Vdomparam = vdomparam;
        }
    }
}
