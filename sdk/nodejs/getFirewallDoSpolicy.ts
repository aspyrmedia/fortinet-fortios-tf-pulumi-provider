// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

export function getFirewallDoSpolicy(args: GetFirewallDoSpolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetFirewallDoSpolicyResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("fortios:index/getFirewallDoSpolicy:getFirewallDoSpolicy", {
        "policyid": args.policyid,
        "vdomparam": args.vdomparam,
    }, opts);
}

/**
 * A collection of arguments for invoking getFirewallDoSpolicy.
 */
export interface GetFirewallDoSpolicyArgs {
    policyid: number;
    vdomparam?: string;
}

/**
 * A collection of values returned by getFirewallDoSpolicy.
 */
export interface GetFirewallDoSpolicyResult {
    readonly anomalies: outputs.GetFirewallDoSpolicyAnomaly[];
    readonly comments: string;
    readonly dstaddrs: outputs.GetFirewallDoSpolicyDstaddr[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly interface: string;
    readonly name: string;
    readonly policyid: number;
    readonly services: outputs.GetFirewallDoSpolicyService[];
    readonly srcaddrs: outputs.GetFirewallDoSpolicySrcaddr[];
    readonly status: string;
    readonly vdomparam?: string;
}

export function getFirewallDoSpolicyOutput(args: GetFirewallDoSpolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFirewallDoSpolicyResult> {
    return pulumi.output(args).apply(a => getFirewallDoSpolicy(a, opts))
}

/**
 * A collection of arguments for invoking getFirewallDoSpolicy.
 */
export interface GetFirewallDoSpolicyOutputArgs {
    policyid: pulumi.Input<number>;
    vdomparam?: pulumi.Input<string>;
}
